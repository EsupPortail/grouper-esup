<?xml version="1.0" encoding="UTF-8"?>
<AttributeResolver
  xmlns="urn:mace:shibboleth:2.0:resolver"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:resolver="urn:mace:shibboleth:2.0:resolver"
  xmlns:ad="urn:mace:shibboleth:2.0:resolver:ad"
  xmlns:dc="urn:mace:shibboleth:2.0:resolver:dc"
  xmlns:grouper="http://grouper.internet2.edu/shibboleth/2.0"
  xmlns:psp="http://grouper.internet2.edu/psp"
  xmlns:psp-grouper-ldap="http://grouper.internet2.edu/psp-grouper-ldap"
  xmlns:psp-grouper-changelog="http://grouper.internet2.edu/psp-grouper-changelog"
  xmlns:psp-grouper-source="http://grouper.internet2.edu/psp-grouper-source"
  xsi:schemaLocation="
   urn:mace:shibboleth:2.0:resolver classpath:/schema/shibboleth-2.0-attribute-resolver.xsd
   urn:mace:shibboleth:2.0:resolver:dc classpath:/schema/shibboleth-2.0-attribute-resolver-dc.xsd
   urn:mace:shibboleth:2.0:resolver:ad classpath:/schema/shibboleth-2.0-attribute-resolver-ad.xsd
   http://grouper.internet2.edu/shibboleth/2.0 classpath:/schema/shibboleth-2.0-grouper.xsd
   http://grouper.internet2.edu/psp classpath:/schema/psp.xsd
   http://grouper.internet2.edu/psp-grouper-ldap classpath:/schema/psp-grouper-ldap.xsd
   http://grouper.internet2.edu/psp-grouper-changelog classpath:/schema/psp-grouper-changelog.xsd
   http://grouper.internet2.edu/psp-grouper-source classpath:/schema/psp-grouper-source.xsd">

  <!-- Grouper data connectors. -->

  <!-- The GroupDataConnector returns attributes representing the group whose name is the principal name. The returned group 
    must be a child of the stem whose name is the edu.internet2.middleware.psp.baseStem property. Groups under the "etc" stem 
    are omitted. -->
  <resolver:DataConnector
    id="GroupDataConnector"
    xsi:type="grouper:GroupDataConnector">
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The GroupInStem filter matches groups which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:GroupInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <grouper:Filter
        xsi:type="grouper:GroupInStem"
        name="etc"
        scope="SUB" />
    </grouper:Filter>
    <!-- The "members" attribute values are equivalent to group.getMembers(). -->
    <grouper:Attribute id="members" />
    <grouper:Attribute id="readers" />
    <grouper:Attribute id="admins" />
    <!-- The "groups" attribute values are equivalent to group.getGroups(). -->
    <grouper:Attribute id="groups" />
    <!-- The "etc:attribute:labeledURI" attribute framework definition. -->
    <!--  configure psp*.xml for up1 needs 
    <grouper:Attribute id="etc:attribute:labeledURI" />
    <grouper:Attribute id="etc:attribute:businessCategory" />
    <grouper:Attribute id="etc:attribute:seeAlso" />
-->
  </resolver:DataConnector>

  <!-- The GroupWithoutMermbershipsDataConnector returns attributes representing the group whose name is the principal name. 
    The returned group must be a child of the stem whose name is the edu.internet2.middleware.psp.baseStem property. Groups under 
    the "etc" stem are omitted. No memberships (groups or members) should be returned by this data connector to improve performance 
    of identifier resolution. -->
  <resolver:DataConnector
    id="GroupWithoutMermbershipsDataConnector"
    xsi:type="grouper:GroupDataConnector">
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The GroupInStem filter matches groups which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:GroupInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <grouper:Filter
        xsi:type="grouper:GroupInStem"
        name="etc"
        scope="SUB" />
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- The StemDataConnector returns attributes representing the stem whose name is the principal name. The returned stem 
    must be a child of the stem whose name is the edu.internet2.middleware.psp.baseStem property. The "etc" stem and all children 
    are omitted. -->
  <resolver:DataConnector
    id="StemDataConnector"
    xsi:type="grouper:StemDataConnector">
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The StemInStem filter matches stems which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:StemInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <!-- The OR filter matches stems which match either the first or second child filter. -->
      <grouper:Filter xsi:type="grouper:OR">
        <!-- The StemInStem filter matches stems which are children of the given stem. -->
        <grouper:Filter
          xsi:type="grouper:StemInStem"
          name="etc"
          scope="SUB" />
        <!-- The StemNameExact filter matches stems with the given name. -->
        <grouper:Filter
          xsi:type="grouper:StemNameExact"
          name="etc" />
      </grouper:Filter>
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- The MemberDataConnector returns attributes representing the member whose subject id or identifier is the principal 
    name. -->
  <resolver:DataConnector
    id="MemberDataConnector"
    xsi:type="grouper:MemberDataConnector">
    <!-- Return members from the "ldap" source only. -->
    <grouper:Filter
      xsi:type="grouper:MemberSource"
      sourceId="ldap" />
    <!-- Return the "dn" attribute of members whose subject source id is "ldap". -->
    <grouper:Attribute
      id="dn"
      source="ldap" />
    <!-- The "groups" attribute values are equivalent to member.getGroups(). -->
    <grouper:Attribute id="groups" />
  </resolver:DataConnector>

  <!-- The MemberWithoutMembershipsDataConnector returns attributes representing the member whose subject id or identifier 
    is the principal name. No memberships (groups) should be returned by this data connector to improve performance of identifier 
    resolution. -->
  <resolver:DataConnector
    id="MemberWithoutMembershipsDataConnector"
    xsi:type="grouper:MemberDataConnector">
    <!-- Return members from the "ldap" source only. -->
    <grouper:Filter
      xsi:type="grouper:MemberSource"
      sourceId="ldap" />
    <!-- Return the "dn" attribute of members whose subject source id is "ldap". -->
    <grouper:Attribute
      id="dn"
      source="ldap" />
  </resolver:DataConnector>


  <resolver:DataConnector
    id="MemberExternalWithoutMembershipsDataConnector"
    xsi:type="grouper:MemberDataConnector">
    <grouper:Filter
      xsi:type="grouper:MemberSource"
      sourceId="grouperExternal" />
    <grouper:Attribute id="identifier" source="grouperExternal" />
    <grouper:Attribute id="name" source="grouperExternal" />
    <grouper:Attribute id="email" source="grouperExternal" />
    <grouper:Attribute id="givenname" source="grouperExternal" />
    <grouper:Attribute id="cn" source="grouperExternal" />
    <grouper:Attribute id="sn" source="grouperExternal" />
  </resolver:DataConnector>

  <resolver:AttributeDefinition
    id="supannGroupeAdminDN"
    xsi:type="ad:Simple"
    sourceAttributeID="supannGroupeAdminDN">
    <resolver:Dependency ref="MemberExternalWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <resolver:AttributeDefinition
    id="memberExternalName"
    xsi:type="ad:Simple"
    sourceAttributeID="name">
    <resolver:Dependency ref="MemberExternalWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <resolver:AttributeDefinition
    id="memberExternalEmail"
    xsi:type="ad:Simple"
    sourceAttributeID="email">
    <resolver:Dependency ref="MemberExternalWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <resolver:AttributeDefinition
    id="memberExternalGivenname"
    xsi:type="ad:Simple"
    sourceAttributeID="givenname">
    <resolver:Dependency ref="MemberExternalWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <resolver:AttributeDefinition
    id="memberExternalSn"
    xsi:type="ad:Simple"
    sourceAttributeID="sn">
    <resolver:Dependency ref="MemberExternalWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <resolver:AttributeDefinition
    id="memberExternalCn"
    xsi:type="ad:Simple"
    sourceAttributeID="cn">
    <resolver:Dependency ref="MemberExternalWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <!-- Returns a single "groupNames" attribute whose values are the names of all groups matching the filter. The groups returned 
    are children of the stem whose name is the edu.internet2.middleware.psp.baseStem property. Groups under the "etc" stem are 
    omitted. -->
  <resolver:DataConnector
    id="AllGroupNamesConnector"
    xsi:type="psp-grouper-source:AllGroupNamesDataConnector">
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The GroupInStem filter matches groups which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:GroupInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <grouper:Filter
        xsi:type="grouper:GroupInStem"
        name="etc"
        scope="SUB" />
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- The names of all groups matching the data connector filter. -->
  <resolver:AttributeDefinition
    id="groupNames"
    xsi:type="ad:Simple">
    <resolver:Dependency ref="AllGroupNamesConnector" />
  </resolver:AttributeDefinition>

  <!-- Returns a single "stemNames" attribute whose values are the names of all stems matching the filter. The stems returned 
    are children of the stem whose name is the edu.internet2.middleware.psp.baseStem property. The "etc" stem and all children 
    are omitted. -->
  <resolver:DataConnector
    id="AllStemNamesConnector"
    xsi:type="psp-grouper-source:AllStemNamesDataConnector">
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The StemInStem filter matches stems which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:StemInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <!-- The OR filter matches stems which match either the first or second child filter. -->
      <grouper:Filter xsi:type="grouper:OR">
        <!-- The StemInStem filter matches stems which are children of the given stem. -->
        <grouper:Filter
          xsi:type="grouper:StemInStem"
          name="etc"
          scope="SUB" />
        <!-- The StemNameExact filter matches stems with the given name. -->
        <grouper:Filter
          xsi:type="grouper:StemNameExact"
          name="etc" />
      </grouper:Filter>
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- The names of all stems matching the data connector filter. -->
  <resolver:AttributeDefinition
    id="stemNames"
    xsi:type="ad:Simple">
    <resolver:Dependency ref="AllStemNamesConnector" />
  </resolver:AttributeDefinition>

  <!-- Returns a single "memberSubjectIds" attribute whose values are the subject ids of all members matching the filter. -->
  <resolver:DataConnector
    id="AllMemberSubjectIdsConnector"
    xsi:type="psp-grouper-source:AllMemberSubjectIdsDataConnector">
    <grouper:Filter
      xsi:type="grouper:MemberSource"
      sourceId="ldap" />
  </resolver:DataConnector>

  <!-- The subject ids of all members matching the data connector filter. -->
  <resolver:AttributeDefinition
    id="memberSubjectIds"
    xsi:type="ad:Simple">
    <resolver:Dependency ref="AllMemberSubjectIdsConnector" />
  </resolver:AttributeDefinition>

  <!-- Returns a single "memberSubjectIds" attribute whose values are the subject ids of all members matching the filter. -->
  <resolver:DataConnector
    id="AllExternalMemberSubjectIdsConnector"
    xsi:type="psp-grouper-source:AllMemberSubjectIdsDataConnector">
    <grouper:Filter
      xsi:type="grouper:MemberSource"
      sourceId="grouperExternal" />
  </resolver:DataConnector>

  <!-- The subject ids of all members matching the data connector filter. -->
  <resolver:AttributeDefinition
    id="allExternalMemberSubjectIds"
    sourceAttributeID="memberSubjectIds"
    xsi:type="ad:Simple">
    <resolver:Dependency ref="AllExternalMemberSubjectIdsConnector" />
  </resolver:AttributeDefinition>


  <!-- ChangeLogDataConnectors return attributes representing the change log entry whose sequence number is the principal 
    name. -->

  <!-- Returns change log attributes representing the deletion of a stem. -->
  <resolver:DataConnector
    id="DeleteStemChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
    <grouper:Filter
      xsi:type="psp-grouper-changelog:ChangeLogEntry"
      category="stem"
      action="deleteStem" />
  </resolver:DataConnector>

  <!-- Returns change log attributes representing the changing of a stem's name. -->
  <resolver:DataConnector
    id="UpdateStemNameChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The AND filter matches both child filters. -->
    <grouper:Filter xsi:type="grouper:AND">
      <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogEntry"
        category="stem"
        action="updateStem" />
      <!-- The ChangeLogExactAttribute filter matches change log entries with the given attribute and value. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogExactAttribute"
        name="propertyChanged"
        value="name" />
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- Returns change log attributes representing the changing of a stem's description. -->
  <resolver:DataConnector
    id="UpdateStemDescriptionChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The AND filter matches both child filters. -->
    <grouper:Filter xsi:type="grouper:AND">
      <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogEntry"
        category="stem"
        action="updateStem" />
      <!-- The ChangeLogExactAttribute filter matches change log entries with the given attribute and value. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogExactAttribute"
        name="propertyChanged"
        value="description" />
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- Returns change log attributes representing the deletion of a group. -->
  <resolver:DataConnector
    id="DeleteGroupChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
    <grouper:Filter
      xsi:type="psp-grouper-changelog:ChangeLogEntry"
      category="group"
      action="deleteGroup" />
  </resolver:DataConnector>

  <!-- Returns change log attributes representing the changing of a group's name. -->
  <resolver:DataConnector
    id="UpdateGroupNameChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The AND filter matches both child filters. -->
    <grouper:Filter xsi:type="grouper:AND">
      <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogEntry"
        category="group"
        action="updateGroup" />
      <!-- The ChangeLogExactAttribute filter matches change log entries with the given attribute and value. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogExactAttribute"
        name="propertyChanged"
        value="name" />
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- Returns change log attributes representing the changing of a group's description. -->
  <resolver:DataConnector
    id="UpdateGroupDescriptionChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The AND filter matches both child filters. -->
    <grouper:Filter xsi:type="grouper:AND">
      <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogEntry"
        category="group"
        action="updateGroup" />
      <!-- The ChangeLogExactAttribute filter matches change log entries with the given attribute and value. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogExactAttribute"
        name="propertyChanged"
        value="description" />
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- Returns change log attributes representing a membership addition. -->
  <resolver:DataConnector
    id="AddMembershipChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
    <grouper:Filter
      xsi:type="psp-grouper-changelog:ChangeLogEntry"
      category="membership"
      action="addMembership" />
  </resolver:DataConnector>

  <!-- Returns change log attributes representing a membership deletion. -->
  <resolver:DataConnector
    id="DeleteMembershipChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The ChangeLogEntry filter matches change log entries with the given category and action. -->
    <grouper:Filter
      xsi:type="psp-grouper-changelog:ChangeLogEntry"
      category="membership"
      action="deleteMembership" />
  </resolver:DataConnector>

  <!-- Returns change log attributes representing attribute value assignment to a group. -->
  <resolver:DataConnector
    id="GroupAttributeAssignValueChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The AND filter matches both child filters. -->
    <grouper:Filter xsi:type="grouper:AND">
      <!-- The ChangeLogEntry filter matches change log entries with the given category. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogEntry"
        category="attributeAssignValue" />
      <!-- The ChangeLogAttributeAssignType filter matches change log entries with the given attribute assign type. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogAttributeAssignType"
        attributeAssignType="group" />
    </grouper:Filter>
  </resolver:DataConnector>

  <!-- Returns change log attributes representing attribute value assignment to a stem. -->
  <resolver:DataConnector
    id="StemAttributeAssignValueChangeLogDataConnector"
    xsi:type="psp-grouper-changelog:ChangeLogDataConnector">
    <!-- The AND filter matches both child filters. -->
    <grouper:Filter xsi:type="grouper:AND">
      <!-- The ChangeLogEntry filter matches change log entries with the given category. -->
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogEntry"
        category="attributeAssignValue" />
      <grouper:Filter
        xsi:type="psp-grouper-changelog:ChangeLogAttributeAssignType"
        attributeAssignType="stem" />
    </grouper:Filter>
  </resolver:DataConnector>


  <!-- Static data connector. -->
  <resolver:DataConnector
    id="StaticDataConnector"
    xsi:type="dc:Static">
    <!-- Group LDAP objectclass. -->
    <dc:Attribute id="staticGroupObjectclass">
      <dc:Value>top</dc:Value>
      <dc:Value>${edu.internet2.middleware.psp.groupObjectClass}</dc:Value>
      <dc:Value>supannGroupe</dc:Value>
    </dc:Attribute>
    <!-- Stem LDAP objectclass. -->
    <dc:Attribute id="staticStemObjectclass">
      <dc:Value>top</dc:Value>
      <dc:Value>organizationalUnit</dc:Value>
    </dc:Attribute>
    <!-- The member LDAP eduMember objectclass. -->
    <dc:Attribute id="memberObjectclass">
      <dc:Value>inetOrgPerson</dc:Value>
      <dc:Value>eduPerson</dc:Value>
      <dc:Value>supannPerson</dc:Value>
    </dc:Attribute>
    <!-- The member LDAP eduMember objectclass. -->
    <dc:Attribute id="owner">
      <dc:Value>${edu.vt.middleware.ldap.bindDn}</dc:Value>
    </dc:Attribute>
  </resolver:DataConnector>


  <!-- Stem identifier and attributes. -->

  <!-- The LDAP DN of a stem. For example, "ou=stemExtension,ou=groups,dc=example,dc=edu". -->
  <resolver:AttributeDefinition
    id="stemDn"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="bushy"
    sourceAttributeID="stemNameInStem"
    rdnAttributeName="ou"
    baseDn="${edu.internet2.middleware.psp.groupsBaseDn}"
    baseStem="${edu.internet2.middleware.psp.baseStem}">
    <!-- Dependencies which return a "stemNameInStem" attribute whose value is the stem name. -->
    <resolver:Dependency ref="stemNameInStem" />
  </resolver:AttributeDefinition>

  <!-- The value of the "stemNameInStem" attribute is the name of the stem of a change log entry. The name of the stem is 
    returned only if the stem is a child of the stem whose name is the edu.internet2.middleware.psp.baseStem property. If the 
    edu.internet2.middleware.psp.baseStem property is the root stem, stems under the "etc" stem are omitted. -->
  <resolver:AttributeDefinition
    id="stemNameInStem"
    xsi:type="grouper:FilteredName"
    sourceAttributeID="name">
    <!-- Dependencies which return a "name" attribute whose value is the stem name. -->
    <resolver:Dependency ref="StemDataConnector" />
    <resolver:Dependency ref="DeleteStemChangeLogDataConnector" />
    <resolver:Dependency ref="UpdateStemNameChangeLogDataConnector" />
    <resolver:Dependency ref="UpdateStemDescriptionChangeLogDataConnector" />
    <resolver:Dependency ref="StemAttributeAssignValueChangeLogDataConnector" />
    <!-- The MINUS filter matches names which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The NameInStem filter matches names which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:NameInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <!-- The OR filter matches names which match either the first or second child filter. -->
      <grouper:Filter xsi:type="grouper:OR">
        <!-- The NameInStem filter matches names which are children of the given stem. -->
        <grouper:Filter
          xsi:type="grouper:NameInStem"
          name="etc"
          scope="SUB" />
        <!-- The NameExact filter matches names with the given name. -->
        <grouper:Filter
          xsi:type="grouper:NameExact"
          name="etc" />
      </grouper:Filter>
    </grouper:Filter>
  </resolver:AttributeDefinition>

  <!-- The alternate LDAP DN of a stem via the change log. For example, the DN of a stem before it is renamed. -->
  <resolver:AttributeDefinition
    id="stemDnAlternateChangeLog"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="bushy"
    sourceAttributeID="propertyOldValue"
    rdnAttributeName="ou"
    baseDn="${edu.internet2.middleware.psp.groupsBaseDn}"
    baseStem="${edu.internet2.middleware.psp.baseStem}">
    <!-- Dependency which returns a "propertyOldValue" attribute whose value is the old stem name. -->
    <resolver:Dependency ref="UpdateStemNameChangeLogDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The stem objectclass attribute. If a change log entry is resolved, do not return dependencies from the static data 
    connector. -->
  <resolver:AttributeDefinition
    id="stemObjectclass"
    xsi:type="ad:Script">
    <resolver:Dependency ref="StaticDataConnector" />
    <resolver:Dependency ref="UpdateStemNameChangeLogDataConnector" />
    <resolver:Dependency ref="UpdateStemDescriptionChangeLogDataConnector" />
    <resolver:Dependency ref="stemObjectclassForScript" />    
    <!-- <resolver:Dependency ref="StemAttributeAssignValueChangeLogDataConnector" /> -->
    <ad:Script><![CDATA[
        stemObjectclass.getValues().clear(); // remove the dummy value
        // Include values from 'staticStemObjectclass' if a change log entry is not being processed.
        if (typeof changeLogCategory != "undefined" && changeLogCategory != null) {
            // return nothing        
        } else {
            stemObjectclass.getValues().addAll(staticStemObjectclass.getValues());
        }                       
    ]]></ad:Script>
  </resolver:AttributeDefinition>

   <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="stemObjectclassForScript">
        <Attribute id="stemObjectclass">
            <Value>dummy</Value>
        </Attribute>
    </resolver:DataConnector>

  <!-- The value of stem "stemOu" attribute is the stem extension. -->
  <resolver:AttributeDefinition
    id="stemOu"
    xsi:type="ad:Simple"
    sourceAttributeID="extension">
    <resolver:Dependency ref="StemDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The value of the stem "description" attribute is the stem description. -->
  <resolver:AttributeDefinition
    id="stemDescription"
    xsi:type="ad:Simple"
    sourceAttributeID="description">
    <resolver:Dependency ref="StemDataConnector" />
    <resolver:Dependency ref="UpdateStemDescriptionChangeLogDataConnector" />
  </resolver:AttributeDefinition>


  <!-- Group identifier and attributes. -->

  <!-- The LDAP DN of a group. For example, "cn=groupExtension,ou=stem,ou=groups,dc=example,dc=edu". -->
  <resolver:AttributeDefinition
    id="groupDn"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="${edu.internet2.middleware.psp.structure}"
    sourceAttributeID="groupNameInStem"
    rdnAttributeName="cn"
    baseDn="${edu.internet2.middleware.psp.groupsBaseDn}"
    baseStem="${edu.internet2.middleware.psp.baseStem}">
    <!-- Dependencies which return a "groupNameInStem" attribute whose value is the group name. -->
    <resolver:Dependency ref="groupNameInStem" />
  </resolver:AttributeDefinition>

  <!-- The value of the "groupNameInStemRaw" attribute is the name of the group of a change log entry. The name of the group 
    is returned only if the group is a child of the stem whose name is the edu.internet2.middleware.psp.baseStem property. If 
    the edu.internet2.middleware.psp.baseStem property is the root stem, groups under the "etc" stem are omitted. -->
    <!-- psp: ensure "cn" does not contain ":" otherwise it breaks our NAS -->
  <resolver:AttributeDefinition
    id="groupNameInStemRaw"
    xsi:type="grouper:FilteredName"
    sourceAttributeID="name">
    <!-- Dependencies which return a "name" attribute whose value is the group name. -->
    <resolver:Dependency ref="GroupWithoutMermbershipsDataConnector" />
    <resolver:Dependency ref="DeleteGroupChangeLogDataConnector" />
    <resolver:Dependency ref="UpdateGroupNameChangeLogDataConnector" />
    <resolver:Dependency ref="UpdateGroupDescriptionChangeLogDataConnector" />
    <resolver:Dependency ref="GroupAttributeAssignValueChangeLogDataConnector" />
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The GroupInStem filter matches groups which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:NameInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <grouper:Filter
        xsi:type="grouper:NameInStem"
        name="etc"
        scope="SUB" />
    </grouper:Filter>
  </resolver:AttributeDefinition>

  <!-- The value of the "labeledURIObjectclass" attribute is "labeledURIObject" if the "labeledURI" 
    attribute is not empty. -->
  <resolver:AttributeDefinition
    id="groupNameInStem"
    sourceAttributeID="groupNameInStemRaw"
    xsi:type="ad:Script">
    <resolver:Dependency ref="groupNameInStemRaw" />
    <resolver:Dependency ref="groupNameInStemForScript" />    
    <ad:Script><![CDATA[
    
        // cleanup: when computing groupNameInStem using groupNameInStemRaw, handle empty groupNameInStem (it only occurs in buggy cases, but it can hide the useful errors)
        // Create the attribute to be returned.
        groupNameInStem.getValues().clear(); // remove the dummy value
	if (!groupNameInStemRaw.getValues().isEmpty()) {
	     groupNameInStem.getValues().add(groupNameInStemRaw.getValues().get(0).replace(":", "."));
	}
    ]]></ad:Script>
  </resolver:AttributeDefinition>

   <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="groupNameInStemForScript">
        <Attribute id="groupNameInStem">
            <Value>dummy</Value>
        </Attribute>
    </resolver:DataConnector>
  

  <!-- The alternate LDAP DN of a group. For example, the DN of a group before it is renamed. -->
  <resolver:AttributeDefinition
    id="groupDnAlternate"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="${edu.internet2.middleware.psp.structure}"
    sourceAttributeID="alternateName"
    rdnAttributeName="cn"
    baseDn="${edu.internet2.middleware.psp.groupsBaseDn}"
    baseStem="${edu.internet2.middleware.psp.baseStem}">
    <!-- Dependency which returns an "alternateName" attribute whose value is the old group name. -->
    <resolver:Dependency ref="GroupWithoutMermbershipsDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The alternate LDAP DN of a group via the change log. For example, the DN of a group before it is renamed. -->
  <resolver:AttributeDefinition
    id="groupDnAlternateChangeLog"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="${edu.internet2.middleware.psp.structure}"
    sourceAttributeID="propertyOldValue"
    rdnAttributeName="cn"
    baseDn="${edu.internet2.middleware.psp.groupsBaseDn}"
    baseStem="${edu.internet2.middleware.psp.baseStem}">
    <!-- Dependency which returns a "propertyOldValue" attribute whose value is the old group name. -->
    <resolver:Dependency ref="UpdateGroupNameChangeLogDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The group objectclass attribute. If an attribute assign value change log entry is being processed, do not return dependencies 
    from the static data connector. -->
  <resolver:AttributeDefinition
    id="groupObjectclass"
    xsi:type="ad:Script">
    <resolver:Dependency ref="StaticDataConnector" />
    <resolver:Dependency ref="labeledURIObjectclass" />
    <resolver:Dependency ref="GroupAttributeAssignValueChangeLogDataConnector" />
    <resolver:Dependency ref="groupObjectclassForScript" />
    <ad:Script><![CDATA[
        groupObjectclass.getValues().clear(); // remove the dummy value
        
        // Include values from 'staticGroupObjectClass' if the change log category is not 'attributeAssignValue'.
        if (typeof changeLogCategory != "undefined" && changeLogCategory != null) {
            if (!changeLogCategory.getValues().contains("attributeAssignValue")) {
                groupObjectclass.getValues().addAll(staticGroupObjectclass.getValues());
            }
        // Include values from 'staticGroupObjectClass' if a change log entry is not being processed.
        } else {
            groupObjectclass.getValues().addAll(staticGroupObjectclass.getValues());
        }
        
        // Include values from 'labeledURIObjectclass' attribute.
        if (typeof labeledURIObjectclass != "undefined" && labeledURIObjectclass != null) {
            if (!labeledURIObjectclass.getValues().isEmpty()) {
                groupObjectclass.getValues().addAll(labeledURIObjectclass.getValues());
            }   
        }                
    ]]></ad:Script>
  </resolver:AttributeDefinition>

     <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="groupObjectclassForScript">
        <Attribute id="groupObjectclass">
            <Value>dummy</Value>
        </Attribute>
    </resolver:DataConnector>


  <!-- The value of the "labeledURIObjectclass" attribute is "labeledURIObject" if the "labeledURI" 
    attribute is not empty. -->
  <resolver:AttributeDefinition
    id="labeledURIObjectclass"
    sourceAttributeID="labeledURI"
    xsi:type="ad:Script">
    <resolver:Dependency ref="labeledURI" />
    <resolver:Dependency ref="labeledURIObjectclassForScript" />    
    <ad:Script><![CDATA[
        labeledURIObjectclass.getValues().clear(); // remove the dummy value
        
        // Return value 'labeledURIObject' if 'labeledURI' is not empty. 
        if (typeof labeledURI != "undefined" && labeledURI != null) {
            if (!labeledURI.getValues().isEmpty()) {
                labeledURIObjectclass.getValues().add("labeledURIObject");
            }                
        }
    ]]></ad:Script>
  </resolver:AttributeDefinition>

   <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="labeledURIObjectclassForScript">
        <Attribute id="labeledURIObjectclass">
            <Value>dummy</Value>
        </Attribute>
    </resolver:DataConnector>  

  <!-- The value of the group "description" attribute is the group description. -->
  <resolver:AttributeDefinition
    id="groupName"
    xsi:type="ad:Simple"
    sourceAttributeID="displayName">
    <resolver:Dependency ref="GroupWithoutMermbershipsDataConnector" />
    <resolver:Dependency ref="UpdateGroupDescriptionChangeLogDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The value of the group "description" attribute is the group description. -->
  <resolver:AttributeDefinition
    id="groupDescription"
    xsi:type="ad:Simple"
    sourceAttributeID="description">
    <resolver:Dependency ref="GroupWithoutMermbershipsDataConnector" />
    <resolver:Dependency ref="UpdateGroupDescriptionChangeLogDataConnector" />
  </resolver:AttributeDefinition>


  <!-- The value of the "labeledURIObjectclass" attribute is "labeledURIObject" if the "labeledURI" 
    attribute is not empty. -->
  <!-- psp: add AttributeDefinition "groupDescriptionObsolete" for use for migration of "cn" -->
  <resolver:AttributeDefinition
    id="groupDescriptionObsolete"
    sourceAttributeID="groupDescription"
    xsi:type="ad:Script">
    <resolver:Dependency ref="groupDescription" />
    <resolver:Dependency ref="groupDescriptionObsoleteForScript" />    
    <ad:Script><![CDATA[
        groupDescriptionObsolete.getValues().clear(); // remove the dummy value
	if (!groupDescription.getValues().isEmpty()) {
	    groupDescriptionObsolete.getValues().add(groupDescription.getValues().get(0) + " (obsolete)");
	}
    ]]></ad:Script>
  </resolver:AttributeDefinition>

     <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="groupDescriptionObsoleteForScript">
        <Attribute id="groupDescriptionObsolete">
            <Value>dummy</Value>
        </Attribute>
    </resolver:DataConnector>

  <!-- The values of the group "hasMember" attribute include the names of the groups which are members of the group. -->
  <!-- The values of the group "hasMember" attribute include the ids of the subjects which are members of the group. -->
  <resolver:AttributeDefinition
    id="hasMember"
    xsi:type="grouper:Member"
    sourceAttributeID="members">
    <resolver:Dependency ref="GroupDataConnector" />
    <grouper:Attribute
      id="name"
      source="ldap" />
    <grouper:Attribute
      id="name"
      source="g:gsa" />
  </resolver:AttributeDefinition>

  <!-- The values of the group "groupIsMemberOf" attribute are the names of the groups that the group is a member of. -->
  <resolver:AttributeDefinition
    id="groupIsMemberOf"
    xsi:type="grouper:Group"
    sourceAttributeID="groups">
    <resolver:Dependency ref="GroupDataConnector" />
    <grouper:Attribute id="name" />
  </resolver:AttributeDefinition>

  <!-- The value of the group "labeledURI" attribute is the group labeledURI. -->
  <resolver:AttributeDefinition
    id="labeledURI"
    xsi:type="ad:Simple"
    sourceAttributeID="etc:attribute:labeledURI">
    <resolver:Dependency ref="GroupDataConnector" />
    <resolver:Dependency ref="GroupAttributeAssignValueChangeLogDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The value of the group "businessCategory" attribute is the group businessCategory. -->
  <resolver:AttributeDefinition
    id="businessCategory"
    xsi:type="ad:Simple"
    sourceAttributeID="etc:attribute:businessCategory">
    <resolver:Dependency ref="GroupDataConnector" />
    <resolver:Dependency ref="GroupAttributeAssignValueChangeLogDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The value of the group "seeAlso" attribute is the group seeAlso. -->
  <resolver:AttributeDefinition
    id="seeAlso"
    xsi:type="ad:Simple"
    sourceAttributeID="etc:attribute:seeAlso">
    <resolver:Dependency ref="GroupDataConnector" />
    <resolver:Dependency ref="GroupAttributeAssignValueChangeLogDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The values of the "readersLdap" attribute are the subject ids of group readers from the "ldap" source. -->
  <resolver:AttributeDefinition
    id="readersLdap"
    xsi:type="grouper:Subject"
    sourceAttributeID="readers">
    <resolver:Dependency ref="GroupDataConnector" />
    <!-- The values of the "id" attribute are the identifiers of subjects whose source id is "ldap". -->
    <grouper:Attribute
      id="id"
      source="ldap" />
  </resolver:AttributeDefinition>

  <!-- The values of the "readersApplication" attribute are the subject ids of group readers from the "ldap" source. -->
  <resolver:AttributeDefinition
    id="readersApplication"
    xsi:type="grouper:Subject"
    sourceAttributeID="readers">
    <resolver:Dependency ref="GroupDataConnector" />
    <!-- The values of the "id" attribute are the identifiers of subjects whose source id is "ldap". -->
    <grouper:Attribute
      id="id"
      source="ldap_applications" />
  </resolver:AttributeDefinition>

  <!-- The values of the "groupAdminsLdap" attribute are the subject ids of group admins from the "ldap" source. -->
  <resolver:AttributeDefinition
    id="groupAdminsLdap"
    xsi:type="grouper:Subject"
    sourceAttributeID="admins">
    <resolver:Dependency ref="GroupDataConnector" />
    <!-- The values of the "id" attribute are the identifiers of subjects whose source id is "ldap". -->
    <grouper:Attribute
      id="id"
      source="ldap" />
  </resolver:AttributeDefinition>

  <!-- The values of the "groupAdminsApplication" attribute are the subject ids of group admins from the "ldap" source. -->
  <resolver:AttributeDefinition
    id="groupAdminsApplication"
    xsi:type="grouper:Subject"
    sourceAttributeID="admins">
    <resolver:Dependency ref="GroupDataConnector" />
    <!-- The values of the "id" attribute are the identifiers of subjects whose source id is "ldap". -->
    <grouper:Attribute
      id="id"
      source="ldap_applications" />
  </resolver:AttributeDefinition>

  <!-- The values of the "membersLdap" attribute are the subject ids of group members from the "ldap" source. -->
  <resolver:AttributeDefinition
    id="membersLdap"
    xsi:type="grouper:Member"
    sourceAttributeID="members">
    <resolver:Dependency ref="GroupDataConnector" />
    <!-- The values of the "id" attribute are the identifiers of subjects whose source id is "ldap". -->
    <grouper:Attribute
      id="id"
      source="ldap" />
  </resolver:AttributeDefinition>

  <!-- The values of the "membersExternal" attribute are the subject ids of group members from the "grouperExternal" source. -->
  <resolver:AttributeDefinition
    id="membersExternal"
    xsi:type="grouper:Member"
    sourceAttributeID="members">
    <resolver:Dependency ref="GroupDataConnector" />
    <!-- The values of the "id" attribute are the identifiers of subjects whose source id is "grouperExternal". -->
    <grouper:Attribute
      id="id"
      source="grouperExternal" />
  </resolver:AttributeDefinition>

  <!-- The values of the "membersGsa" attribute are the names of group members which are grouper groups. -->
  <resolver:AttributeDefinition
    id="membersGsa"
    xsi:type="grouper:Member"
    sourceAttributeID="members">
    <resolver:Dependency ref="GroupDataConnector" />
    <!-- The values of the "name" attribute are the names of groups whose source is "g:gsa". -->
    <grouper:Attribute
      id="name"
      source="g:gsa" />
  </resolver:AttributeDefinition>

  <resolver:AttributeDefinition
    id="owner"
    xsi:type="ad:Simple">
    <resolver:Dependency ref="StaticDataConnector" />
  </resolver:AttributeDefinition>


  <!-- Member identifier. -->

  <!-- The LDAP DN of a member. The value of this attribute is the "dn" of subjects whose source id is "ldap". -->
  <resolver:AttributeDefinition
    id="memberDn"
    xsi:type="psp:PSOIdentifier"
    sourceAttributeID="dn">
    <resolver:Dependency ref="MemberWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The LDAP DN of a member. The value of this attribute is the "dn" of subjects whose source id is "grouperExternal". -->
  <resolver:AttributeDefinition
    id="memberExternalDn"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="flat"
    sourceAttributeID="identifier"
    rdnAttributeName="eduPersonPrincipalName"
    baseDn="ou=externalPeople,dc=univ-rouen,dc=fr"
    baseStem="unused">
    <resolver:Dependency ref="MemberExternalWithoutMembershipsDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The group objectclass attribute. -->
  <resolver:AttributeDefinition
    id="memberObjectclass"
    xsi:type="ad:Simple">
    <resolver:Dependency ref="StaticDataConnector" />
  </resolver:AttributeDefinition>

  <!-- The values of the member "memberIsMemberOf" attribute are the names of the groups that the member is a member of. -->
  <resolver:AttributeDefinition
    id="memberIsMemberOf"
    xsi:type="grouper:Group"
    sourceAttributeID="groups">
    <resolver:Dependency ref="MemberDataConnector" />
    <grouper:Attribute id="name" />
  </resolver:AttributeDefinition>


  <!-- Change log group membership. -->

  <!-- The value of the "changeLogMembershipGroupDn" attribute is a pso identifier whose ID is the ldap DN of the group of 
    a membership change log entry. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipGroupDn"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="${edu.internet2.middleware.psp.structure}"
    sourceAttributeID="changeLogMembershipGroupName"
    rdnAttributeName="cn"
    baseDn="${edu.internet2.middleware.psp.groupsBaseDn}"
    baseStem="${edu.internet2.middleware.psp.baseStem}">
    <resolver:Dependency ref="changeLogMembershipGroupName" />
  </resolver:AttributeDefinition>

  <!-- The value of the "changeLogMembershipGroupName" attribute is the name of the group of a membership change log entry. 
    The name of the group is returned only if the group is a child of the stem whose name is the edu.internet2.middleware.psp.baseStem 
    property. If the edu.internet2.middleware.psp.baseStem property is the root stem, groups under the "etc" stem are omitted. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipGroupName"
    xsi:type="grouper:FilteredName"
    sourceAttributeID="groupName">
    <resolver:Dependency ref="AddMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="DeleteMembershipChangeLogDataConnector" />
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The NameInStem filter matches names which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:NameInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <grouper:Filter
        xsi:type="grouper:NameInStem"
        name="etc"
        scope="SUB" />
    </grouper:Filter>
  </resolver:AttributeDefinition>

  <!-- The value of the "changeLogMembershipGroupSubjectName" attribute is the name of the group member of a membership change 
    log entry. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipGroupSubjectName"
    xsi:type="ad:Script">
    <resolver:Dependency ref="AddMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="DeleteMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="changeLogMembershipGroupSubjectNameForScript" />    
    <ad:Script><![CDATA[
        changeLogMembershipGroupSubjectName.getValues().clear(); // remove the dummy value
        
        // Return 'subjectName' attribute values if the 'sourceId' attribute is 'g:gsa'.
        if (typeof sourceId != "undefined" && sourceId != null ){            
            if (sourceId.getValues().contains("g:gsa")) {
                if (typeof subjectName != "undefined" && subjectName != null ){
                    changeLogMembershipGroupSubjectName.getValues().add(subjectName.getValues().get(0));
                }
            }          
        }
    ]]></ad:Script>
  </resolver:AttributeDefinition>

   <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="changeLogMembershipGroupSubjectNameForScript">
        <Attribute id="changeLogMembershipGroupSubjectName">
            <Value>dummy</Value>
        </Attribute>
    </resolver:DataConnector>
  
  <!-- The value of the "changeLogMembershipLdapSubjectId" attribute is the subject identifier of the "ldap" source member 
    of a membership change log entry. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipLdapSubjectId"
    xsi:type="ad:Script">
    <resolver:Dependency ref="AddMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="DeleteMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="changeLogMembershipLdapSubjectIdForScript" />    
    <ad:Script><![CDATA[
        changeLogMembershipLdapSubjectId.getValues().clear(); // remove the dummy value
        
        // Return 'subjectId' attribute values if the 'sourceId' attribute is 'ldap'.
        if (typeof sourceId != "undefined" && sourceId != null ){            
            if (sourceId.getValues().contains("ldap")) {
                if (typeof subjectId != "undefined" && subjectId != null ){
                    changeLogMembershipLdapSubjectId.getValues().add(subjectId.getValues().get(0));
                }
            }
        }
    ]]></ad:Script>
  </resolver:AttributeDefinition>

     <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="changeLogMembershipLdapSubjectIdForScript">
        <Attribute id="changeLogMembershipLdapSubjectId">
            <Value>dummy</Value>
        </Attribute>
     </resolver:DataConnector>
     
  <!-- The value of the "changeLogMembershipSubjectName" attribute is the subject name of a membership change log entry. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipSubjectName"
    xsi:type="ad:Simple"
    sourceAttributeID="subjectName">
    <resolver:Dependency ref="AddMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="DeleteMembershipChangeLogDataConnector" />
  </resolver:AttributeDefinition>

  <!-- Change log group member membership. -->

  <!-- The value of the "changeLogMembershipGroupMemberDn" attribute is a pso identifier whose ID is the ldap dn of the group 
    member of a membership change log entry. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipGroupMemberDn"
    xsi:type="psp-grouper-ldap:LdapDnFromGrouperNamePSOIdentifier"
    structure="${edu.internet2.middleware.psp.structure}"
    sourceAttributeID="changeLogMembershipGroupSubjectNameInStem"
    rdnAttributeName="cn"
    baseDn="${edu.internet2.middleware.psp.groupsBaseDn}"
    baseStem="${edu.internet2.middleware.psp.baseStem}">
    <resolver:Dependency ref="changeLogMembershipGroupSubjectNameInStem" />
  </resolver:AttributeDefinition>

  <!-- The value of the "changeLogMembershipGroupSubjectNameInStem" attribute is the name of the group member of a membership 
    change log entry. The name of the group is returned only if the group is a child of the stem whose name is the edu.internet2.middleware.psp.baseStem 
    property. If the edu.internet2.middleware.psp.baseStem property is the root stem, groups under the "etc" stem are omitted. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipGroupSubjectNameInStem"
    xsi:type="grouper:FilteredName"
    sourceAttributeID="changeLogMembershipGroupSubjectName">
    <resolver:Dependency ref="changeLogMembershipGroupSubjectName" />
    <!-- The MINUS filter matches stems which match the first child filter and not the second. -->
    <grouper:Filter xsi:type="grouper:MINUS">
      <!-- The NameInStem filter matches names which are children of the given stem. -->
      <grouper:Filter
        xsi:type="grouper:NameInStem"
        name="${edu.internet2.middleware.psp.baseStem}"
        scope="SUB" />
      <grouper:Filter
        xsi:type="grouper:NameInStem"
        name="etc"
        scope="SUB" />
    </grouper:Filter>
  </resolver:AttributeDefinition>

  <!-- Change log member membership. -->

  <!-- The LDAP DN of a member. The value of this attribute is the "dn" of subjects whose source id is "ldap". -->
  <resolver:AttributeDefinition
    id="changeLogMembershipMemberDn"
    xsi:type="psp:PSOIdentifier"
    sourceAttributeID="changeLogMembershipLdapSubjectDn">
    <resolver:Dependency ref="changeLogMembershipLdapSubjectDn" />
  </resolver:AttributeDefinition>

  <!-- The value of the "changeLogMembershipLdapSubjectDn" attribute is the value of the "subjectdn" attribute for subjects 
    from the "ldap" source. The "subjectdn" attribute value is the "dn" of subjects from the "ldap" source. -->
  <resolver:AttributeDefinition
    id="changeLogMembershipLdapSubjectDn"
    xsi:type="ad:Script">
    <resolver:Dependency ref="AddMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="DeleteMembershipChangeLogDataConnector" />
    <resolver:Dependency ref="changeLogMembershipLdapSubjectDnForScript" />    
    <ad:Script><![CDATA[
        changeLogMembershipLdapSubjectDn.getValues().clear(); // remove the dummy value
        if (typeof sourceId != "undefined" && sourceId != null ){
            if (sourceId.getValues().contains("ldap")) {
                if (typeof subjectdn != "undefined" && subjectdn != null ){
                    changeLogMembershipLdapSubjectDn.getValues().add(subjectdn.getValues().get(0));
                }
            }      
        }
    ]]></ad:Script>
  </resolver:AttributeDefinition>

     <resolver:DataConnector xmlns="urn:mace:shibboleth:2.0:resolver:dc" xsi:type="dc:Static" id="changeLogMembershipLdapSubjectDnForScript">
        <Attribute id="changeLogMembershipLdapSubjectDn">
            <Value>dummy</Value>
        </Attribute>
    </resolver:DataConnector>

    
</AttributeResolver>
